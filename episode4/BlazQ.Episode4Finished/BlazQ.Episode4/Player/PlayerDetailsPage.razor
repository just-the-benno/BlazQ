@page "/"
@using Game
@inject NavigationManager navManager
@inject GameSessionState state

<EditForm EditContext="_context" class="full-heigth" OnValidSubmit="AddPlayer">

    <Header>
        <h1>
            Welcome to BlazQ <br>
            <small> # The new quiz in town</small>
        </h1>
    </Header>

    <ContentPage>
        <Card>
            <Header>
                Create your profile
            </Header>

            <Body>
                <DataAnnotationsValidator />
                <div class="form-group">
                    <label for="name">You Playername</label>
                    <InputText @bind-Value="_model.Name" class="form-control" id="name" />
                    <ValidationMessage For="@(() => _model.Name)" />
                </div>
                <div class="form-group">
                    <label for="avatar">Choose your Avatar</label>
                    <InputSelect @bind-Value="_model.AvatarUrl" class="form-control" id="Example">
                        <option value="">Select your avatar</option>

                        @foreach (AvatarViewModel avatar in _possibleAvatars)
                        {
                            <option value="@avatar.Url">@avatar.Name</option>
                        }
                    </InputSelect>
                </div>
                @if (_players.Count < 4)
                {
                    <button type="submit" class="btn btn-turquois">Add Player</button>
                }
            </Body>
        </Card>
    </ContentPage>

    <Footer Players="_players">
     
        @if (_players.Count > 0)
        {
            <button type="button" class="btn btn-turquois" @onclick="StartAGame">Start Game</button>
        }

    </Footer>
</EditForm>
@code {

    private List<PlayerViewModel> _players = new List<PlayerViewModel>();

    private PlayerViewModel _model;
    private EditContext _context;

    private List<AvatarViewModel> _possibleAvatars = new List<AvatarViewModel>
{
new AvatarViewModel { Name = "Herb", Url = "/avatars/herb.jpg" },
new AvatarViewModel { Name = "Fox with a hat", Url = "/avatars/fox-with-hat.jpg" },
new AvatarViewModel { Name = "Cookies", Url = "/avatars/cookie.jpg" },
new AvatarViewModel { Name = "Flower", Url = "/avatars/flower.jpg" },
new AvatarViewModel { Name = "Grumpy Cat", Url = "/avatars/grumpy-cat.jpg" },
new AvatarViewModel { Name = "Mushroom", Url = "/avatars/mushroom.jpg" },
new AvatarViewModel { Name = "Craw", Url = "/avatars/craw.jpg" },
};

    private void InitilizeForm()
    {
        _model = new PlayerViewModel();
        _context = new EditContext(_model);
    }

    protected override void OnInitialized()
    {
        base.OnInitialized();

        InitilizeForm();
    }

    private void AddPlayer()
    {
        _players.Add(_model);
        var selectedAvatar = _possibleAvatars.Find(x => x.Url == _model.AvatarUrl);
        _possibleAvatars.Remove(selectedAvatar);

        InitilizeForm();
    }

    private void StartAGame()
    {
        GameSession session = new GameSession(_players);

        state.Session = session;
        navManager.NavigateTo("/Game");
    }

}
